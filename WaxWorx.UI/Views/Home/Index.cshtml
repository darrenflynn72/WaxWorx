@model WaxWorx.UI.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid bg-dark text-light py-4">
    <h2 class="mb-4 text-secondary">Vinyl Record Collection</h2>

    <!-- Summary Cards -->
    <div class="row mb-4 summary-cards">
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewAlbums" method="get">
                <button type="submit" class="card summary-card bg-dark text-light w-100 text-start border-0 p-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-orange me-3">
                            <i class="bi bi-disc-fill fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.TotalRecords</h4>
                            <small class="text-muted">Albums</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewArtists" method="get">
                <button type="submit" class="card summary-card bg-dark text-light w-100 text-start border-0 p-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-blue me-3">
                            <i class="bi bi-person-fill fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.TotalArtists</h4>
                            <small class="text-muted">Artists</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewGenres" method="get">
                <button type="submit" class="card summary-card bg-dark text-light w-100 text-start border-0 p-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-red me-3">
                            <i class="bi bi-music-note-list fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.TotalGenres</h4>
                            <small class="text-muted">Genres</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewCollectionCondition" method="get">
                <button type="submit" class="card summary-card bg-dark text-light">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-green me-3">
                            <i class="bi bi-bar-chart-fill fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.ConditionScore %</h4>
                            <small class="text-muted">Total Condition</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
    </div>

    <!-- Collection Stats -->
    <div class="row mb-4">
        <div class="col-md-8">
            <h4 class="text-info">Collection Stats</h4>
            <div id="chart_container" style="width: 100%; height: 500px;"></div>
        </div>        

        <!-- Recently Added -->
        <div class="col-md-4">
            <h4 class="text-info">Recently Added</h4>

            <div class="card card-bg-chart text-light border-secondary">
                <div class="card-body p-0">
                    @if (Model.RecentAlbums != null && Model.RecentAlbums.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var album in Model.RecentAlbums)
                            {
                                <li class="list-group-item list-bg-chart text-light d-flex align-items-center border-secondary">
                                    <div class="me-3 p-1 border border-info rounded">
                                        <img src="@album.CoverUrl"
                                             alt="@album.Title"
                                             class="d-block"
                                             style="width:80px; height:80px;" />
                                    </div>
                                    <div>
                                        <strong>@album.Title</strong><br />
                                        <small>@album.Artist (@album.ReleaseYear)</small>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-muted p-3">
                            <em>No recent albums yet.</em>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- API Tests -->
        <div class="container mt-4">
            <h4>API Test Actions</h4>
            <div class="d-flex gap-3">
                <form asp-controller="CoverArt" asp-action="TestCoverArtApi" method="post">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test CoverArt API</button>
                </form>
                <form asp-controller="MusicBrainz" asp-action="TestMusicBrainzApi" method="post">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test MusicBrainz API</button>
                </form>
            </div>
        </div>

        <!-- Dropdown Tests -->
        <div class="container mt-4">
            <h4>API Test Actions</h4>
            <div class="d-flex gap-3">
                <form asp-controller="Home" asp-action="GetArtistDropdownOptions" method="post">
                    <button type="submit" class="btn btn-custom-view btn-primary">Dropdown - Artist</button>
                </form>
                <form asp-controller="Home" asp-action="GetGenreDropdownOptions" method="post">
                    <button type="submit" class="btn btn-custom-view btn-primary">Dropdown Genre</button>
                </form>
                <form asp-controller="Home" asp-action="GetConditionDropdownOptions" method="post">
                    <button type="submit" class="btn btn-custom-view btn-primary">Dropdown - Condition</button>
                </form>
            </div>
        </div>

        @*         <!-- Get DB Data -->
        <div class="container mt-4">
            <h4>DB Data Test Actions</h4>
            <div class="d-flex gap-3">
                <form asp-controller="Home" asp-action="ViewAlbums" method="get">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test ViewAlbums</button>
                </form>
                <form asp-controller="Home" asp-action="ViewArtists" method="get">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test ViewArtists</button>
                </form>
                <form asp-controller="Home" asp-action="ViewGenres" method="get">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test ViewGenres</button>
                </form>
            </div>
        </div> *@
    </div>
</div>


@* Google Charts Script *@
@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            fetch('@Url.Action("GetGenreStats", "Home")')
                .then(response => response.json())
                .then(data => {
                    // Check if data is empty to prevent errors
                    if (!data || data.length === 0) {
                        return;
                    }

                    // Get the maximum value from the 'count' property in your dataset
                    const maxCount = Math.max(...data.map(item => item.count));

                    var dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Genre');
                    dataTable.addColumn('number', 'Count');

                    data.forEach(item => {
                        dataTable.addRow([item.genre, item.count]);
                    });

                    var options = {
                        title: 'Top 10 Album Genres',
                        hAxis: {
                            title: 'Number of Albums',
                            textStyle: { color: '#E0E0E0' },
                            titleTextStyle: { color: '#E0E0E0' },
                            // Set the max value of the axis to match the largest data point
                            maxValue: maxCount
                        },
                        vAxis: {
                            title: 'Genre',
                            textStyle: { color: '#E0E0E0' },
                            titleTextStyle: { color: '#E0E0E0' }
                        },
                        legend: 'none',
                        backgroundColor: '#121212',
                        chartArea: {
                            backgroundColor: '#121212',
                            top: 20,
                            left: 100,
                            width: '80%',
                            height: '80%'
                        },
                        series: {
                            0: { color: '#17a2b8' }
                        }
                    };

                    var chart = new google.visualization.BarChart(document.getElementById('chart_container'));
                    chart.draw(dataTable, options);
                })
                .catch(error => console.error('Error fetching data:', error));
        }
    </script>
}
