@model WaxWorx.UI.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid bg-dark text-light py-4">
    <h2 class="mb-4 text-secondary">Vinyl Record Collection</h2>

    <!-- Summary Cards -->
    <div class="row mb-4 summary-cards">
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewAlbums" method="get">
                <button type="submit" class="card summary-card bg-dark text-light w-100 text-start border-0 p-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-orange me-3">
                            <i class="bi bi-disc-fill fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.TotalRecords</h4>
                            <small class="text-muted">Albums</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewArtists" method="get">
                <button type="submit" class="card summary-card bg-dark text-light w-100 text-start border-0 p-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-blue me-3">
                            <i class="bi bi-person-fill fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.TotalArtists</h4>
                            <small class="text-muted">Artists</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewGenres" method="get">
                <button type="submit" class="card summary-card bg-dark text-light w-100 text-start border-0 p-0">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-red me-3">
                            <i class="bi bi-music-note-list fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.TotalGenres</h4>
                            <small class="text-muted">Genres</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
        <div class="col-md-3">
            <form asp-controller="Home" asp-action="ViewConditions" method="get">
                <button type="submit" class="card summary-card bg-dark text-light">
                    <div class="card-body d-flex align-items-center">
                        <div class="summary-icon text-accent-green me-3">
                            <i class="bi bi-bar-chart-fill fs-1"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">@Model.ConditionScore %</h4>
                            <small class="text-muted">Total Condition</small>
                        </div>
                    </div>
                </button>
            </form>
        </div>
    </div>

    <!-- Collection Stats -->
    <div class="row mb-4">
        <div class="col-md-8">
            <h4 class="text-info">Collection Stats</h4>
            <canvas id="genreChart"></canvas>
        </div>

        <!-- Recently Added -->
        <div class="col-md-4">
            <h4 class="text-info">Recently Added</h4>

            <div class="card card-bg-chart text-light border-secondary">
                <div class="card-body p-0">
                    @if (Model.RecentAlbums != null && Model.RecentAlbums.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var album in Model.RecentAlbums)
                            {
                                <li class="list-group-item list-bg-chart text-light d-flex align-items-center border-secondary">
                                    <div class="me-3 p-1 border border-info rounded">
                                        <img src="@album.CoverUrl"
                                             alt="@album.Title"
                                             class="d-block"
                                             style="width:80px; height:80px;" />
                                    </div>
                                    <div>
                                        <strong>@album.Title</strong><br />
                                        <small>@album.Artist (@album.ReleaseYear)</small>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-muted p-3">
                            <em>No recent albums yet.</em>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- API Tests -->
        <div class="container mt-4">
            <h4>API Test Actions</h4>
            <div class="d-flex gap-3">
                <form asp-controller="CoverArt" asp-action="TestCoverArtApi" method="post">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test CoverArt API</button>
                </form>
                <form asp-controller="MusicBrainz" asp-action="TestMusicBrainzApi" method="post">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test MusicBrainz API</button>
                </form>
            </div>
        </div>



        @*         <!-- Get DB Data -->
        <div class="container mt-4">
            <h4>DB Data Test Actions</h4>
            <div class="d-flex gap-3">
                <form asp-controller="Home" asp-action="ViewAlbums" method="get">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test ViewAlbums</button>
                </form>
                <form asp-controller="Home" asp-action="ViewArtists" method="get">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test ViewArtists</button>
                </form>
                <form asp-controller="Home" asp-action="ViewGenres" method="get">
                    <button type="submit" class="btn btn-custom-view btn-primary">Test ViewGenres</button>
                </form>
            </div>
        </div> *@
    </div>



    <!-- Scripts -->
    @section Scripts {
        <script>
            fetch('/Home/GetGenreStats')
                .then(res => res.json())
                .then(data => {
                    console.log("Genre stats:", data);
                    console.table(data);

                    const labels = data.map(g => g.genre);
                    const counts = data.map(g => parseInt(g.count, 10) || 0);

                    const canvas = document.getElementById('genreChart');
                    if (!canvas) {
                        console.error("Canvas element #genreChart not found.");
                        return;
                    }

                    // Dynamically scale canvas height based on number of genres
                    canvas.height = labels.length * 18; // ~28px per genre

                    const ctx = canvas.getContext('2d');

                    if (window.genreChart && typeof window.genreChart.destroy === 'function') {
                        window.genreChart.destroy();
                    }

                    window.genreChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Records by Genre',
                                data: counts,
                                backgroundColor: '#17a2b8',
                                borderColor: '#17a2b8',
                                borderWidth: 1,
                                barThickness: 24,           // Fixed bar heightc// was 44
                                categoryPercentage: 0.5,    // Shrinks each category slot
                                barPercentage: 1.0          // Fills most of the slot with the bar
                            }]
                        },
                        options: {
                            indexAxis: 'y',
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                x: {
                                    beginAtZero: true,
                                    ticks: {
                                        precision: 0,
                                        font: {
                                            size: 14 // bottom scale (count)
                                        }
                                    }
                                },
                                y: {
                                    ticks: {
                                        font: {
                                            size: 18 // vertical scale (genre)
                                        },
                                        maxRotation: 0,
                                        minRotation: 0
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: {
                                        font: {
                                            size: 12
                                        }
                                    }
                                }
                            }
                        }


                    });

                    console.log("Chart instance:", window.genreChart);
                })
                .catch(err => {
                    console.error("Error fetching genre stats:", err);
                });
        </script>
    }





    @*         <script>
                const ctx = document.getElementById('genreChart').getContext('2d');
                const genreChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.GenreLabels)),
                        datasets: [{
                            label: 'Records by Genre',
                            data: @Html.Raw(Json.Serialize(Model.GenreCounts)),
                            backgroundColor: 'rgba(0, 255, 255, 0.6)',
                            borderColor: 'rgba(0, 255, 255, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: { beginAtZero: true }
                        }
                    }
                });
            </script> *@


